[{"C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\App.js":"1","C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\components\\Sidebar.js":"2","C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\index.js":"3","C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\components\\SidebarChat.js":"4","C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\components\\Chat.js":"5","C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\firebase.js":"6","C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\components\\Login.js":"7","C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\reducer.js":"8","C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\StateProvider.js":"9"},{"size":1276,"mtime":1609659576982,"results":"10","hashOfConfig":"11"},{"size":2009,"mtime":1609620053287,"results":"12","hashOfConfig":"11"},{"size":424,"mtime":1609257915747,"results":"13","hashOfConfig":"11"},{"size":1558,"mtime":1609619821432,"results":"14","hashOfConfig":"11"},{"size":4637,"mtime":1609699500594,"results":"15","hashOfConfig":"11"},{"size":722,"mtime":1609243610747,"results":"16","hashOfConfig":"11"},{"size":1115,"mtime":1609256931897,"results":"17","hashOfConfig":"11"},{"size":426,"mtime":1609256565376,"results":"18","hashOfConfig":"11"},{"size":377,"mtime":1609257952721,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"13p3j9u",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\App.js",["44"],"import React, {useState} from \"react\";\nimport './App.css';\nimport Sidebar from \"./components/Sidebar\";\nimport Chat from \"./components/Chat\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport {useStateValue} from \"./StateProvider\";\n\nfunction App() {\n    const [{ user }, dispatch] = useStateValue();\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () =>{\n        setIsOpen(!isOpen);\n    }\n\n    return (\n        <div className=\"App\">\n            {!user ? (\n                <Login/>\n            ) : (\n                <div className=\"app-body\">\n                    <Router>\n                        <Sidebar isOpen={isOpen} toggle={toggle}/>\n                        <Switch>\n                            <Route path=\"/rooms/:roomId\">\n                                <Chat isOpen={isOpen} toggle={toggle}/>\n                            </Route>\n                            {/*<Route exact path=\"/\">*/}\n                            {/*    /!*<Sidebar/>*!/*/}\n                            {/*    <Chat/>*/}\n                            {/*</Route>*/}\n                        </Switch>\n                    </Router>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\components\\Sidebar.js",["45"],"C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\index.js",[],["46","47"],"C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\components\\SidebarChat.js",["48"],"import React, {useEffect, useState} from 'react';\r\nimport './SidebarChat.css'\r\nimport {Avatar} from \"@material-ui/core\";\r\nimport db from \"../firebase\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction SidebarChat({id, name, addNewChat}) {\r\n\r\n    const [seed, setSeed] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (id){\r\n            db.collection('rooms').doc(id)\r\n                .collection('messages')\r\n                .orderBy('timestamp', 'desc')\r\n                .onSnapshot((snapshot) => (\r\n                    setMessages(snapshot.docs.map((doc) => doc.data()))\r\n                ))        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, []);\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please enter name for chat\")\r\n        if (roomName) {\r\n            db.collection(\"rooms\").add({\r\n                name: roomName\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    return !addNewChat ? (\r\n        <Link to={`/rooms/${id}`}>\r\n            <div className=\"sidebarChat\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className=\"sidebarChat__info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{messages[0]?.message}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    ) : (\r\n        <div onClick={createChat} className=\"sidebarChat\">\r\n            <h2>Add New Chat +</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SidebarChat;","C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\components\\Chat.js",["49","50","51"],"import React, {useEffect, useState} from 'react';\r\nimport './Chat.css'\r\nimport {Avatar, IconButton} from \"@material-ui/core\";\r\nimport {\r\n    SearchOutlined, AttachFile, MoreVert,\r\n    InsertEmoticon, Mic, KeyboardArrowLeft\r\n} from \"@material-ui/icons\";\r\nimport {useParams} from 'react-router-dom';\r\nimport db from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport {useStateValue} from \"../StateProvider\";\r\n\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from 'emoji-mart'\r\nimport ScrollToBottom from 'react-scroll-to-bottom'\r\n\r\nfunction Chat({isOpen, toggle}) {\r\n\r\n    const [seed, setSeed] = useState('');\r\n    const [input, setInput] = useState('');\r\n    const {roomId} = useParams();\r\n    const [roomName, setRomName] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection('rooms').doc(roomId).onSnapshot((snapshot) =>\r\n                setRomName(snapshot.data().name));\r\n\r\n            db.collection('rooms').doc(roomId)\r\n                .collection('messages')\r\n                .orderBy('timestamp', 'asc')\r\n                .onSnapshot((snapshot) => (\r\n                    setMessages(snapshot.docs.map((doc) => doc.data()))\r\n                ))\r\n        }\r\n    }, [roomId])\r\n\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        //console.log(input)\r\n\r\n        db.collection('rooms').doc(roomId)\r\n            .collection(\"messages\").add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue\r\n                .serverTimestamp(),\r\n        });\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    // const addEmoji = e => {\r\n    //     let emoji = e.native;\r\n    //     this.setState({\r\n    //         text: this.state.text + emoji\r\n    //     });\r\n    // };\r\n\r\n    // function handleScroll() {\r\n    //     window.scroll({\r\n    //         top: document.getElementById('chat-body').offsetHeight,\r\n    //         left: 0,\r\n    //         behavior: 'smooth',\r\n    //     });\r\n    // }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat-header\">\r\n                <IconButton>\r\n                    <KeyboardArrowLeft\r\n                        isOpen={isOpen} onClick={toggle}/>\r\n                </IconButton>\r\n                <Avatar\r\n                    src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className=\"chat-headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>last seen{\" \"}\r\n                        {new Date(messages[messages.length-1]?.\r\n                        timestamp?.toDate()).toUTCString().slice(6,22)}\r\n                    </p>\r\n                </div>\r\n                <div className=\"chat-headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert className=\"mrnone\"/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <ScrollToBottom className=\"chat-body\" id='chat-body'>\r\n                {messages.map((message) => (\r\n                    <p className={`chat-message ${message.name === \r\n                    user.displayName && 'chat-receiver'}`}>\r\n                        <span className=\"chat-name\">{message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"chat-timestamp\">\r\n                            {new Date(message.timestamp?.toDate())\r\n                                .toUTCString().slice(5,22)}\r\n                        </span>\r\n                    </p>\r\n                ))}\r\n\r\n            </ScrollToBottom>\r\n            <div className=\"chat-footer\">\r\n                {/*<Picker onSelect={addEmoji}/>*/}\r\n                <InsertEmoticon/>\r\n                <form action=\"\">\r\n                    <input value={input} onChange={e =>\r\n                        setInput(e.target.value)}\r\n                           placeholder=\"Type a message\" type=\"text\"/>\r\n                    <button onClick={sendMessage}>\r\n                        Send Message</button>\r\n                </form>\r\n                <Mic/>\r\n                {/*<button type=\"button\" onClick={handleScroll}>Scroll</button>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;","C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\firebase.js",[],"C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\components\\Login.js",["52"],"import React from 'react';\r\nimport logo from '../img/etherum.png'\r\nimport {Button} from \"@material-ui/core\";\r\nimport './Login.css'\r\nimport {auth, provider} from \"../firebase\";\r\nimport {useStateValue} from \"../StateProvider\";\r\nimport {actionTypes} from \"../reducer\";\r\n\r\nfunction Login(props) {\r\n    const [ {}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n            .then((result) => {\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                });\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login-container\">\r\n                <img src={logo} alt=\"logo\"/>\r\n                <div className=\"login-text\">\r\n                    <h1>Sign in to our App</h1>\r\n                </div>\r\n                <Button onClick={signIn} type=\"submit\">\r\n                    Sign In With Google\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\reducer.js",[],["53","54"],"C:\\Users\\RXZ\\Desktop\\whatsapp\\src\\StateProvider.js",[],{"ruleId":"55","severity":1,"message":"56","line":10,"column":22,"nodeType":"57","messageId":"58","endLine":10,"endColumn":30},{"ruleId":"55","severity":1,"message":"56","line":11,"column":22,"nodeType":"57","messageId":"58","endLine":11,"endColumn":30},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":20,"column":8,"nodeType":"65","endLine":20,"endColumn":10,"suggestions":"66"},{"ruleId":"55","severity":1,"message":"67","line":14,"column":10,"nodeType":"57","messageId":"58","endLine":14,"endColumn":16},{"ruleId":"55","severity":1,"message":"56","line":24,"column":20,"nodeType":"57","messageId":"58","endLine":24,"endColumn":28},{"ruleId":"68","severity":1,"message":"69","line":87,"column":62,"nodeType":"70","messageId":"71","endLine":87,"endColumn":64,"fix":"72"},{"ruleId":"73","severity":1,"message":"74","line":10,"column":13,"nodeType":"75","messageId":"76","endLine":10,"endColumn":15},{"ruleId":"59","replacedBy":"77"},{"ruleId":"61","replacedBy":"78"},"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["81"],"'Picker' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"82","text":"83"},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["79"],["80"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},[2762,2790],"\r\n                        ?.","Update the dependencies array to be: [id]",{"range":"86","text":"87"},[668,670],"[id]"]